<?php
/**
 * This file is part of Reel.
 * @auth lupeng
 * @date 2024/4/8 14:29
 */
declare(strict_types=1);

namespace MiniAws\Facades;

use Mini\Facades\Facade;

/**
 * Class Aws
 * @package MiniAws\Facades
 * @method static \Aws\AwsClientInterface createClient($name, array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionClient($name, array $args = [])
 * @method static \Aws\Sdk copy(array $args = [])
 * @method static \Aws\ACMPCA\ACMPCAClient createACMPCA(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionACMPCA(array $args = [])
 * @method static \Aws\ARCZonalShift\ARCZonalShiftClient createARCZonalShift(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionARCZonalShift(array $args = [])
 * @method static \Aws\AccessAnalyzer\AccessAnalyzerClient createAccessAnalyzer(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAccessAnalyzer(array $args = [])
 * @method static \Aws\Account\AccountClient createAccount(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAccount(array $args = [])
 * @method static \Aws\Acm\AcmClient createAcm(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAcm(array $args = [])
 * @method static \Aws\AlexaForBusiness\AlexaForBusinessClient createAlexaForBusiness(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAlexaForBusiness(array $args = [])
 * @method static \Aws\Amplify\AmplifyClient createAmplify(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAmplify(array $args = [])
 * @method static \Aws\AmplifyBackend\AmplifyBackendClient createAmplifyBackend(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAmplifyBackend(array $args = [])
 * @method static \Aws\AmplifyUIBuilder\AmplifyUIBuilderClient createAmplifyUIBuilder(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAmplifyUIBuilder(array $args = [])
 * @method static \Aws\ApiGateway\ApiGatewayClient createApiGateway(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApiGateway(array $args = [])
 * @method static \Aws\ApiGatewayManagementApi\ApiGatewayManagementApiClient createApiGatewayManagementApi(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApiGatewayManagementApi(array $args = [])
 * @method static \Aws\ApiGatewayV2\ApiGatewayV2Client createApiGatewayV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApiGatewayV2(array $args = [])
 * @method static \Aws\AppConfig\AppConfigClient createAppConfig(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppConfig(array $args = [])
 * @method static \Aws\AppConfigData\AppConfigDataClient createAppConfigData(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppConfigData(array $args = [])
 * @method static \Aws\AppFabric\AppFabricClient createAppFabric(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppFabric(array $args = [])
 * @method static \Aws\AppIntegrationsService\AppIntegrationsServiceClient createAppIntegrationsService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppIntegrationsService(array $args = [])
 * @method static \Aws\AppMesh\AppMeshClient createAppMesh(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppMesh(array $args = [])
 * @method static \Aws\AppRegistry\AppRegistryClient createAppRegistry(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppRegistry(array $args = [])
 * @method static \Aws\AppRunner\AppRunnerClient createAppRunner(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppRunner(array $args = [])
 * @method static \Aws\AppSync\AppSyncClient createAppSync(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppSync(array $args = [])
 * @method static \Aws\Appflow\AppflowClient createAppflow(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppflow(array $args = [])
 * @method static \Aws\ApplicationAutoScaling\ApplicationAutoScalingClient createApplicationAutoScaling(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApplicationAutoScaling(array $args = [])
 * @method static \Aws\ApplicationCostProfiler\ApplicationCostProfilerClient createApplicationCostProfiler(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApplicationCostProfiler(array $args = [])
 * @method static \Aws\ApplicationDiscoveryService\ApplicationDiscoveryServiceClient createApplicationDiscoveryService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApplicationDiscoveryService(array $args = [])
 * @method static \Aws\ApplicationInsights\ApplicationInsightsClient createApplicationInsights(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionApplicationInsights(array $args = [])
 * @method static \Aws\Appstream\AppstreamClient createAppstream(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAppstream(array $args = [])
 * @method static \Aws\Artifact\ArtifactClient createArtifact(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionArtifact(array $args = [])
 * @method static \Aws\Athena\AthenaClient createAthena(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAthena(array $args = [])
 * @method static \Aws\AuditManager\AuditManagerClient createAuditManager(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAuditManager(array $args = [])
 * @method static \Aws\AugmentedAIRuntime\AugmentedAIRuntimeClient createAugmentedAIRuntime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAugmentedAIRuntime(array $args = [])
 * @method static \Aws\AutoScaling\AutoScalingClient createAutoScaling(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAutoScaling(array $args = [])
 * @method static \Aws\AutoScalingPlans\AutoScalingPlansClient createAutoScalingPlans(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionAutoScalingPlans(array $args = [])
 * @method static \Aws\B2bi\B2biClient createB2bi(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionB2bi(array $args = [])
 * @method static \Aws\BCMDataExports\BCMDataExportsClient createBCMDataExports(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBCMDataExports(array $args = [])
 * @method static \Aws\Backup\BackupClient createBackup(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBackup(array $args = [])
 * @method static \Aws\BackupGateway\BackupGatewayClient createBackupGateway(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBackupGateway(array $args = [])
 * @method static \Aws\BackupStorage\BackupStorageClient createBackupStorage(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBackupStorage(array $args = [])
 * @method static \Aws\Batch\BatchClient createBatch(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBatch(array $args = [])
 * @method static \Aws\Bedrock\BedrockClient createBedrock(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBedrock(array $args = [])
 * @method static \Aws\BedrockAgent\BedrockAgentClient createBedrockAgent(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBedrockAgent(array $args = [])
 * @method static \Aws\BedrockAgentRuntime\BedrockAgentRuntimeClient createBedrockAgentRuntime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBedrockAgentRuntime(array $args = [])
 * @method static \Aws\BedrockRuntime\BedrockRuntimeClient createBedrockRuntime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBedrockRuntime(array $args = [])
 * @method static \Aws\BillingConductor\BillingConductorClient createBillingConductor(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBillingConductor(array $args = [])
 * @method static \Aws\Braket\BraketClient createBraket(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBraket(array $args = [])
 * @method static \Aws\Budgets\BudgetsClient createBudgets(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionBudgets(array $args = [])
 * @method static \Aws\Chatbot\ChatbotClient createChatbot(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChatbot(array $args = [])
 * @method static \Aws\Chime\ChimeClient createChime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChime(array $args = [])
 * @method static \Aws\ChimeSDKIdentity\ChimeSDKIdentityClient createChimeSDKIdentity(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChimeSDKIdentity(array $args = [])
 * @method static \Aws\ChimeSDKMediaPipelines\ChimeSDKMediaPipelinesClient createChimeSDKMediaPipelines(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChimeSDKMediaPipelines(array $args = [])
 * @method static \Aws\ChimeSDKMeetings\ChimeSDKMeetingsClient createChimeSDKMeetings(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChimeSDKMeetings(array $args = [])
 * @method static \Aws\ChimeSDKMessaging\ChimeSDKMessagingClient createChimeSDKMessaging(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChimeSDKMessaging(array $args = [])
 * @method static \Aws\ChimeSDKVoice\ChimeSDKVoiceClient createChimeSDKVoice(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionChimeSDKVoice(array $args = [])
 * @method static \Aws\CleanRooms\CleanRoomsClient createCleanRooms(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCleanRooms(array $args = [])
 * @method static \Aws\CleanRoomsML\CleanRoomsMLClient createCleanRoomsML(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCleanRoomsML(array $args = [])
 * @method static \Aws\Cloud9\Cloud9Client createCloud9(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloud9(array $args = [])
 * @method static \Aws\CloudControlApi\CloudControlApiClient createCloudControlApi(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudControlApi(array $args = [])
 * @method static \Aws\CloudDirectory\CloudDirectoryClient createCloudDirectory(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudDirectory(array $args = [])
 * @method static \Aws\CloudFormation\CloudFormationClient createCloudFormation(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudFormation(array $args = [])
 * @method static \Aws\CloudFront\CloudFrontClient createCloudFront(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudFront(array $args = [])
 * @method static \Aws\CloudFrontKeyValueStore\CloudFrontKeyValueStoreClient createCloudFrontKeyValueStore(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudFrontKeyValueStore(array $args = [])
 * @method static \Aws\CloudHSMV2\CloudHSMV2Client createCloudHSMV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudHSMV2(array $args = [])
 * @method static \Aws\CloudHsm\CloudHsmClient createCloudHsm(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudHsm(array $args = [])
 * @method static \Aws\CloudSearch\CloudSearchClient createCloudSearch(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudSearch(array $args = [])
 * @method static \Aws\CloudSearchDomain\CloudSearchDomainClient createCloudSearchDomain(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudSearchDomain(array $args = [])
 * @method static \Aws\CloudTrail\CloudTrailClient createCloudTrail(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudTrail(array $args = [])
 * @method static \Aws\CloudTrailData\CloudTrailDataClient createCloudTrailData(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudTrailData(array $args = [])
 * @method static \Aws\CloudWatch\CloudWatchClient createCloudWatch(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudWatch(array $args = [])
 * @method static \Aws\CloudWatchEvents\CloudWatchEventsClient createCloudWatchEvents(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudWatchEvents(array $args = [])
 * @method static \Aws\CloudWatchEvidently\CloudWatchEvidentlyClient createCloudWatchEvidently(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudWatchEvidently(array $args = [])
 * @method static \Aws\CloudWatchLogs\CloudWatchLogsClient createCloudWatchLogs(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudWatchLogs(array $args = [])
 * @method static \Aws\CloudWatchRUM\CloudWatchRUMClient createCloudWatchRUM(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCloudWatchRUM(array $args = [])
 * @method static \Aws\CodeArtifact\CodeArtifactClient createCodeArtifact(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeArtifact(array $args = [])
 * @method static \Aws\CodeBuild\CodeBuildClient createCodeBuild(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeBuild(array $args = [])
 * @method static \Aws\CodeCatalyst\CodeCatalystClient createCodeCatalyst(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeCatalyst(array $args = [])
 * @method static \Aws\CodeCommit\CodeCommitClient createCodeCommit(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeCommit(array $args = [])
 * @method static \Aws\CodeConnections\CodeConnectionsClient createCodeConnections(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeConnections(array $args = [])
 * @method static \Aws\CodeDeploy\CodeDeployClient createCodeDeploy(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeDeploy(array $args = [])
 * @method static \Aws\CodeGuruProfiler\CodeGuruProfilerClient createCodeGuruProfiler(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeGuruProfiler(array $args = [])
 * @method static \Aws\CodeGuruReviewer\CodeGuruReviewerClient createCodeGuruReviewer(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeGuruReviewer(array $args = [])
 * @method static \Aws\CodeGuruSecurity\CodeGuruSecurityClient createCodeGuruSecurity(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeGuruSecurity(array $args = [])
 * @method static \Aws\CodePipeline\CodePipelineClient createCodePipeline(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodePipeline(array $args = [])
 * @method static \Aws\CodeStar\CodeStarClient createCodeStar(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeStar(array $args = [])
 * @method static \Aws\CodeStarNotifications\CodeStarNotificationsClient createCodeStarNotifications(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeStarNotifications(array $args = [])
 * @method static \Aws\CodeStarconnections\CodeStarconnectionsClient createCodeStarconnections(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCodeStarconnections(array $args = [])
 * @method static \Aws\CognitoIdentity\CognitoIdentityClient createCognitoIdentity(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCognitoIdentity(array $args = [])
 * @method static \Aws\CognitoIdentityProvider\CognitoIdentityProviderClient createCognitoIdentityProvider(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCognitoIdentityProvider(array $args = [])
 * @method static \Aws\CognitoSync\CognitoSyncClient createCognitoSync(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCognitoSync(array $args = [])
 * @method static \Aws\Comprehend\ComprehendClient createComprehend(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionComprehend(array $args = [])
 * @method static \Aws\ComprehendMedical\ComprehendMedicalClient createComprehendMedical(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionComprehendMedical(array $args = [])
 * @method static \Aws\ComputeOptimizer\ComputeOptimizerClient createComputeOptimizer(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionComputeOptimizer(array $args = [])
 * @method static \Aws\ConfigService\ConfigServiceClient createConfigService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConfigService(array $args = [])
 * @method static \Aws\Connect\ConnectClient createConnect(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConnect(array $args = [])
 * @method static \Aws\ConnectCampaignService\ConnectCampaignServiceClient createConnectCampaignService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConnectCampaignService(array $args = [])
 * @method static \Aws\ConnectCases\ConnectCasesClient createConnectCases(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConnectCases(array $args = [])
 * @method static \Aws\ConnectContactLens\ConnectContactLensClient createConnectContactLens(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConnectContactLens(array $args = [])
 * @method static \Aws\ConnectParticipant\ConnectParticipantClient createConnectParticipant(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConnectParticipant(array $args = [])
 * @method static \Aws\ConnectWisdomService\ConnectWisdomServiceClient createConnectWisdomService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionConnectWisdomService(array $args = [])
 * @method static \Aws\ControlTower\ControlTowerClient createControlTower(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionControlTower(array $args = [])
 * @method static \Aws\CostExplorer\CostExplorerClient createCostExplorer(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCostExplorer(array $args = [])
 * @method static \Aws\CostOptimizationHub\CostOptimizationHubClient createCostOptimizationHub(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCostOptimizationHub(array $args = [])
 * @method static \Aws\CostandUsageReportService\CostandUsageReportServiceClient createCostandUsageReportService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCostandUsageReportService(array $args = [])
 * @method static \Aws\CustomerProfiles\CustomerProfilesClient createCustomerProfiles(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionCustomerProfiles(array $args = [])
 * @method static \Aws\DAX\DAXClient createDAX(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDAX(array $args = [])
 * @method static \Aws\DLM\DLMClient createDLM(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDLM(array $args = [])
 * @method static \Aws\DataExchange\DataExchangeClient createDataExchange(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDataExchange(array $args = [])
 * @method static \Aws\DataPipeline\DataPipelineClient createDataPipeline(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDataPipeline(array $args = [])
 * @method static \Aws\DataSync\DataSyncClient createDataSync(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDataSync(array $args = [])
 * @method static \Aws\DataZone\DataZoneClient createDataZone(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDataZone(array $args = [])
 * @method static \Aws\DatabaseMigrationService\DatabaseMigrationServiceClient createDatabaseMigrationService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDatabaseMigrationService(array $args = [])
 * @method static \Aws\Deadline\DeadlineClient createDeadline(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDeadline(array $args = [])
 * @method static \Aws\Detective\DetectiveClient createDetective(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDetective(array $args = [])
 * @method static \Aws\DevOpsGuru\DevOpsGuruClient createDevOpsGuru(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDevOpsGuru(array $args = [])
 * @method static \Aws\DeviceFarm\DeviceFarmClient createDeviceFarm(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDeviceFarm(array $args = [])
 * @method static \Aws\DirectConnect\DirectConnectClient createDirectConnect(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDirectConnect(array $args = [])
 * @method static \Aws\DirectoryService\DirectoryServiceClient createDirectoryService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDirectoryService(array $args = [])
 * @method static \Aws\DocDB\DocDBClient createDocDB(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDocDB(array $args = [])
 * @method static \Aws\DocDBElastic\DocDBElasticClient createDocDBElastic(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDocDBElastic(array $args = [])
 * @method static \Aws\DynamoDb\DynamoDbClient createDynamoDb(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDynamoDb(array $args = [])
 * @method static \Aws\DynamoDbStreams\DynamoDbStreamsClient createDynamoDbStreams(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionDynamoDbStreams(array $args = [])
 * @method static \Aws\EBS\EBSClient createEBS(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEBS(array $args = [])
 * @method static \Aws\EC2InstanceConnect\EC2InstanceConnectClient createEC2InstanceConnect(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEC2InstanceConnect(array $args = [])
 * @method static \Aws\ECRPublic\ECRPublicClient createECRPublic(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionECRPublic(array $args = [])
 * @method static \Aws\EKS\EKSClient createEKS(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEKS(array $args = [])
 * @method static \Aws\EKSAuth\EKSAuthClient createEKSAuth(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEKSAuth(array $args = [])
 * @method static \Aws\EMRContainers\EMRContainersClient createEMRContainers(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEMRContainers(array $args = [])
 * @method static \Aws\EMRServerless\EMRServerlessClient createEMRServerless(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEMRServerless(array $args = [])
 * @method static \Aws\Ec2\Ec2Client createEc2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEc2(array $args = [])
 * @method static \Aws\Ecr\EcrClient createEcr(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEcr(array $args = [])
 * @method static \Aws\Ecs\EcsClient createEcs(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEcs(array $args = [])
 * @method static \Aws\Efs\EfsClient createEfs(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEfs(array $args = [])
 * @method static \Aws\ElastiCache\ElastiCacheClient createElastiCache(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElastiCache(array $args = [])
 * @method static \Aws\ElasticBeanstalk\ElasticBeanstalkClient createElasticBeanstalk(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElasticBeanstalk(array $args = [])
 * @method static \Aws\ElasticInference\ElasticInferenceClient createElasticInference(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElasticInference(array $args = [])
 * @method static \Aws\ElasticLoadBalancing\ElasticLoadBalancingClient createElasticLoadBalancing(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElasticLoadBalancing(array $args = [])
 * @method static \Aws\ElasticLoadBalancingV2\ElasticLoadBalancingV2Client createElasticLoadBalancingV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElasticLoadBalancingV2(array $args = [])
 * @method static \Aws\ElasticTranscoder\ElasticTranscoderClient createElasticTranscoder(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElasticTranscoder(array $args = [])
 * @method static \Aws\ElasticsearchService\ElasticsearchServiceClient createElasticsearchService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionElasticsearchService(array $args = [])
 * @method static \Aws\Emr\EmrClient createEmr(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEmr(array $args = [])
 * @method static \Aws\EntityResolution\EntityResolutionClient createEntityResolution(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEntityResolution(array $args = [])
 * @method static \Aws\EventBridge\EventBridgeClient createEventBridge(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionEventBridge(array $args = [])
 * @method static \Aws\FIS\FISClient createFIS(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFIS(array $args = [])
 * @method static \Aws\FMS\FMSClient createFMS(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFMS(array $args = [])
 * @method static \Aws\FSx\FSxClient createFSx(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFSx(array $args = [])
 * @method static \Aws\FinSpaceData\FinSpaceDataClient createFinSpaceData(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFinSpaceData(array $args = [])
 * @method static \Aws\Firehose\FirehoseClient createFirehose(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFirehose(array $args = [])
 * @method static \Aws\ForecastQueryService\ForecastQueryServiceClient createForecastQueryService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionForecastQueryService(array $args = [])
 * @method static \Aws\ForecastService\ForecastServiceClient createForecastService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionForecastService(array $args = [])
 * @method static \Aws\FraudDetector\FraudDetectorClient createFraudDetector(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFraudDetector(array $args = [])
 * @method static \Aws\FreeTier\FreeTierClient createFreeTier(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionFreeTier(array $args = [])
 * @method static \Aws\GameLift\GameLiftClient createGameLift(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGameLift(array $args = [])
 * @method static \Aws\Glacier\GlacierClient createGlacier(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGlacier(array $args = [])
 * @method static \Aws\GlobalAccelerator\GlobalAcceleratorClient createGlobalAccelerator(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGlobalAccelerator(array $args = [])
 * @method static \Aws\Glue\GlueClient createGlue(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGlue(array $args = [])
 * @method static \Aws\GlueDataBrew\GlueDataBrewClient createGlueDataBrew(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGlueDataBrew(array $args = [])
 * @method static \Aws\Greengrass\GreengrassClient createGreengrass(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGreengrass(array $args = [])
 * @method static \Aws\GreengrassV2\GreengrassV2Client createGreengrassV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGreengrassV2(array $args = [])
 * @method static \Aws\GroundStation\GroundStationClient createGroundStation(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGroundStation(array $args = [])
 * @method static \Aws\GuardDuty\GuardDutyClient createGuardDuty(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionGuardDuty(array $args = [])
 * @method static \Aws\Health\HealthClient createHealth(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionHealth(array $args = [])
 * @method static \Aws\HealthLake\HealthLakeClient createHealthLake(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionHealthLake(array $args = [])
 * @method static \Aws\Honeycode\HoneycodeClient createHoneycode(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionHoneycode(array $args = [])
 * @method static \Aws\IVS\IVSClient createIVS(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIVS(array $args = [])
 * @method static \Aws\IVSRealTime\IVSRealTimeClient createIVSRealTime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIVSRealTime(array $args = [])
 * @method static \Aws\Iam\IamClient createIam(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIam(array $args = [])
 * @method static \Aws\IdentityStore\IdentityStoreClient createIdentityStore(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIdentityStore(array $args = [])
 * @method static \Aws\ImportExport\ImportExportClient createImportExport(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionImportExport(array $args = [])
 * @method static \Aws\Inspector\InspectorClient createInspector(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionInspector(array $args = [])
 * @method static \Aws\Inspector2\Inspector2Client createInspector2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionInspector2(array $args = [])
 * @method static \Aws\InspectorScan\InspectorScanClient createInspectorScan(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionInspectorScan(array $args = [])
 * @method static \Aws\InternetMonitor\InternetMonitorClient createInternetMonitor(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionInternetMonitor(array $args = [])
 * @method static \Aws\IoT1ClickDevicesService\IoT1ClickDevicesServiceClient createIoT1ClickDevicesService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoT1ClickDevicesService(array $args = [])
 * @method static \Aws\IoT1ClickProjects\IoT1ClickProjectsClient createIoT1ClickProjects(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoT1ClickProjects(array $args = [])
 * @method static \Aws\IoTAnalytics\IoTAnalyticsClient createIoTAnalytics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTAnalytics(array $args = [])
 * @method static \Aws\IoTDeviceAdvisor\IoTDeviceAdvisorClient createIoTDeviceAdvisor(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTDeviceAdvisor(array $args = [])
 * @method static \Aws\IoTEvents\IoTEventsClient createIoTEvents(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTEvents(array $args = [])
 * @method static \Aws\IoTEventsData\IoTEventsDataClient createIoTEventsData(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTEventsData(array $args = [])
 * @method static \Aws\IoTFleetHub\IoTFleetHubClient createIoTFleetHub(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTFleetHub(array $args = [])
 * @method static \Aws\IoTFleetWise\IoTFleetWiseClient createIoTFleetWise(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTFleetWise(array $args = [])
 * @method static \Aws\IoTJobsDataPlane\IoTJobsDataPlaneClient createIoTJobsDataPlane(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTJobsDataPlane(array $args = [])
 * @method static \Aws\IoTSecureTunneling\IoTSecureTunnelingClient createIoTSecureTunneling(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTSecureTunneling(array $args = [])
 * @method static \Aws\IoTSiteWise\IoTSiteWiseClient createIoTSiteWise(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTSiteWise(array $args = [])
 * @method static \Aws\IoTThingsGraph\IoTThingsGraphClient createIoTThingsGraph(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTThingsGraph(array $args = [])
 * @method static \Aws\IoTTwinMaker\IoTTwinMakerClient createIoTTwinMaker(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTTwinMaker(array $args = [])
 * @method static \Aws\IoTWireless\IoTWirelessClient createIoTWireless(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIoTWireless(array $args = [])
 * @method static \Aws\Iot\IotClient createIot(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIot(array $args = [])
 * @method static \Aws\IotDataPlane\IotDataPlaneClient createIotDataPlane(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionIotDataPlane(array $args = [])
 * @method static \Aws\Kafka\KafkaClient createKafka(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKafka(array $args = [])
 * @method static \Aws\KafkaConnect\KafkaConnectClient createKafkaConnect(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKafkaConnect(array $args = [])
 * @method static \Aws\KendraRanking\KendraRankingClient createKendraRanking(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKendraRanking(array $args = [])
 * @method static \Aws\Keyspaces\KeyspacesClient createKeyspaces(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKeyspaces(array $args = [])
 * @method static \Aws\Kinesis\KinesisClient createKinesis(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesis(array $args = [])
 * @method static \Aws\KinesisAnalytics\KinesisAnalyticsClient createKinesisAnalytics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisAnalytics(array $args = [])
 * @method static \Aws\KinesisAnalyticsV2\KinesisAnalyticsV2Client createKinesisAnalyticsV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisAnalyticsV2(array $args = [])
 * @method static \Aws\KinesisVideo\KinesisVideoClient createKinesisVideo(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisVideo(array $args = [])
 * @method static \Aws\KinesisVideoArchivedMedia\KinesisVideoArchivedMediaClient createKinesisVideoArchivedMedia(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisVideoArchivedMedia(array $args = [])
 * @method static \Aws\KinesisVideoMedia\KinesisVideoMediaClient createKinesisVideoMedia(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisVideoMedia(array $args = [])
 * @method static \Aws\KinesisVideoSignalingChannels\KinesisVideoSignalingChannelsClient createKinesisVideoSignalingChannels(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisVideoSignalingChannels(array $args = [])
 * @method static \Aws\KinesisVideoWebRTCStorage\KinesisVideoWebRTCStorageClient createKinesisVideoWebRTCStorage(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKinesisVideoWebRTCStorage(array $args = [])
 * @method static \Aws\Kms\KmsClient createKms(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionKms(array $args = [])
 * @method static \Aws\LakeFormation\LakeFormationClient createLakeFormation(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLakeFormation(array $args = [])
 * @method static \Aws\Lambda\LambdaClient createLambda(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLambda(array $args = [])
 * @method static \Aws\LaunchWizard\LaunchWizardClient createLaunchWizard(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLaunchWizard(array $args = [])
 * @method static \Aws\LexModelBuildingService\LexModelBuildingServiceClient createLexModelBuildingService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLexModelBuildingService(array $args = [])
 * @method static \Aws\LexModelsV2\LexModelsV2Client createLexModelsV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLexModelsV2(array $args = [])
 * @method static \Aws\LexRuntimeService\LexRuntimeServiceClient createLexRuntimeService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLexRuntimeService(array $args = [])
 * @method static \Aws\LexRuntimeV2\LexRuntimeV2Client createLexRuntimeV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLexRuntimeV2(array $args = [])
 * @method static \Aws\LicenseManager\LicenseManagerClient createLicenseManager(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLicenseManager(array $args = [])
 * @method static \Aws\LicenseManagerLinuxSubscriptions\LicenseManagerLinuxSubscriptionsClient createLicenseManagerLinuxSubscriptions(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLicenseManagerLinuxSubscriptions(array $args = [])
 * @method static \Aws\LicenseManagerUserSubscriptions\LicenseManagerUserSubscriptionsClient createLicenseManagerUserSubscriptions(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLicenseManagerUserSubscriptions(array $args = [])
 * @method static \Aws\Lightsail\LightsailClient createLightsail(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLightsail(array $args = [])
 * @method static \Aws\LocationService\LocationServiceClient createLocationService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLocationService(array $args = [])
 * @method static \Aws\LookoutEquipment\LookoutEquipmentClient createLookoutEquipment(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLookoutEquipment(array $args = [])
 * @method static \Aws\LookoutMetrics\LookoutMetricsClient createLookoutMetrics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLookoutMetrics(array $args = [])
 * @method static \Aws\LookoutforVision\LookoutforVisionClient createLookoutforVision(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionLookoutforVision(array $args = [])
 * @method static \Aws\MQ\MQClient createMQ(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMQ(array $args = [])
 * @method static \Aws\MTurk\MTurkClient createMTurk(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMTurk(array $args = [])
 * @method static \Aws\MWAA\MWAAClient createMWAA(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMWAA(array $args = [])
 * @method static \Aws\MachineLearning\MachineLearningClient createMachineLearning(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMachineLearning(array $args = [])
 * @method static \Aws\Macie2\Macie2Client createMacie2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMacie2(array $args = [])
 * @method static \Aws\MainframeModernization\MainframeModernizationClient createMainframeModernization(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMainframeModernization(array $args = [])
 * @method static \Aws\ManagedBlockchain\ManagedBlockchainClient createManagedBlockchain(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionManagedBlockchain(array $args = [])
 * @method static \Aws\ManagedBlockchainQuery\ManagedBlockchainQueryClient createManagedBlockchainQuery(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionManagedBlockchainQuery(array $args = [])
 * @method static \Aws\ManagedGrafana\ManagedGrafanaClient createManagedGrafana(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionManagedGrafana(array $args = [])
 * @method static \Aws\MarketplaceAgreement\MarketplaceAgreementClient createMarketplaceAgreement(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMarketplaceAgreement(array $args = [])
 * @method static \Aws\MarketplaceCatalog\MarketplaceCatalogClient createMarketplaceCatalog(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMarketplaceCatalog(array $args = [])
 * @method static \Aws\MarketplaceCommerceAnalytics\MarketplaceCommerceAnalyticsClient createMarketplaceCommerceAnalytics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMarketplaceCommerceAnalytics(array $args = [])
 * @method static \Aws\MarketplaceDeployment\MarketplaceDeploymentClient createMarketplaceDeployment(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMarketplaceDeployment(array $args = [])
 * @method static \Aws\MarketplaceEntitlementService\MarketplaceEntitlementServiceClient createMarketplaceEntitlementService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMarketplaceEntitlementService(array $args = [])
 * @method static \Aws\MarketplaceMetering\MarketplaceMeteringClient createMarketplaceMetering(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMarketplaceMetering(array $args = [])
 * @method static \Aws\MediaConnect\MediaConnectClient createMediaConnect(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaConnect(array $args = [])
 * @method static \Aws\MediaConvert\MediaConvertClient createMediaConvert(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaConvert(array $args = [])
 * @method static \Aws\MediaLive\MediaLiveClient createMediaLive(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaLive(array $args = [])
 * @method static \Aws\MediaPackage\MediaPackageClient createMediaPackage(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaPackage(array $args = [])
 * @method static \Aws\MediaPackageV2\MediaPackageV2Client createMediaPackageV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaPackageV2(array $args = [])
 * @method static \Aws\MediaPackageVod\MediaPackageVodClient createMediaPackageVod(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaPackageVod(array $args = [])
 * @method static \Aws\MediaStore\MediaStoreClient createMediaStore(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaStore(array $args = [])
 * @method static \Aws\MediaStoreData\MediaStoreDataClient createMediaStoreData(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaStoreData(array $args = [])
 * @method static \Aws\MediaTailor\MediaTailorClient createMediaTailor(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMediaTailor(array $args = [])
 * @method static \Aws\MedicalImaging\MedicalImagingClient createMedicalImaging(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMedicalImaging(array $args = [])
 * @method static \Aws\MemoryDB\MemoryDBClient createMemoryDB(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMemoryDB(array $args = [])
 * @method static \Aws\MigrationHub\MigrationHubClient createMigrationHub(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMigrationHub(array $args = [])
 * @method static \Aws\MigrationHubConfig\MigrationHubConfigClient createMigrationHubConfig(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMigrationHubConfig(array $args = [])
 * @method static \Aws\MigrationHubOrchestrator\MigrationHubOrchestratorClient createMigrationHubOrchestrator(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMigrationHubOrchestrator(array $args = [])
 * @method static \Aws\MigrationHubRefactorSpaces\MigrationHubRefactorSpacesClient createMigrationHubRefactorSpaces(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMigrationHubRefactorSpaces(array $args = [])
 * @method static \Aws\MigrationHubStrategyRecommendations\MigrationHubStrategyRecommendationsClient createMigrationHubStrategyRecommendations(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMigrationHubStrategyRecommendations(array $args = [])
 * @method static \Aws\Mobile\MobileClient createMobile(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionMobile(array $args = [])
 * @method static \Aws\Neptune\NeptuneClient createNeptune(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNeptune(array $args = [])
 * @method static \Aws\NeptuneGraph\NeptuneGraphClient createNeptuneGraph(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNeptuneGraph(array $args = [])
 * @method static \Aws\Neptunedata\NeptunedataClient createNeptunedata(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNeptunedata(array $args = [])
 * @method static \Aws\NetworkFirewall\NetworkFirewallClient createNetworkFirewall(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNetworkFirewall(array $args = [])
 * @method static \Aws\NetworkManager\NetworkManagerClient createNetworkManager(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNetworkManager(array $args = [])
 * @method static \Aws\NetworkMonitor\NetworkMonitorClient createNetworkMonitor(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNetworkMonitor(array $args = [])
 * @method static \Aws\NimbleStudio\NimbleStudioClient createNimbleStudio(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionNimbleStudio(array $args = [])
 * @method static \Aws\OAM\OAMClient createOAM(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOAM(array $args = [])
 * @method static \Aws\OSIS\OSISClient createOSIS(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOSIS(array $args = [])
 * @method static \Aws\Omics\OmicsClient createOmics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOmics(array $args = [])
 * @method static \Aws\OpenSearchServerless\OpenSearchServerlessClient createOpenSearchServerless(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOpenSearchServerless(array $args = [])
 * @method static \Aws\OpenSearchService\OpenSearchServiceClient createOpenSearchService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOpenSearchService(array $args = [])
 * @method static \Aws\OpsWorks\OpsWorksClient createOpsWorks(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOpsWorks(array $args = [])
 * @method static \Aws\OpsWorksCM\OpsWorksCMClient createOpsWorksCM(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOpsWorksCM(array $args = [])
 * @method static \Aws\Organizations\OrganizationsClient createOrganizations(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOrganizations(array $args = [])
 * @method static \Aws\Outposts\OutpostsClient createOutposts(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionOutposts(array $args = [])
 * @method static \Aws\PI\PIClient createPI(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPI(array $args = [])
 * @method static \Aws\Panorama\PanoramaClient createPanorama(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPanorama(array $args = [])
 * @method static \Aws\PaymentCryptography\PaymentCryptographyClient createPaymentCryptography(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPaymentCryptography(array $args = [])
 * @method static \Aws\PaymentCryptographyData\PaymentCryptographyDataClient createPaymentCryptographyData(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPaymentCryptographyData(array $args = [])
 * @method static \Aws\PcaConnectorAd\PcaConnectorAdClient createPcaConnectorAd(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPcaConnectorAd(array $args = [])
 * @method static \Aws\Personalize\PersonalizeClient createPersonalize(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPersonalize(array $args = [])
 * @method static \Aws\PersonalizeEvents\PersonalizeEventsClient createPersonalizeEvents(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPersonalizeEvents(array $args = [])
 * @method static \Aws\PersonalizeRuntime\PersonalizeRuntimeClient createPersonalizeRuntime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPersonalizeRuntime(array $args = [])
 * @method static \Aws\Pinpoint\PinpointClient createPinpoint(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPinpoint(array $args = [])
 * @method static \Aws\PinpointEmail\PinpointEmailClient createPinpointEmail(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPinpointEmail(array $args = [])
 * @method static \Aws\PinpointSMSVoice\PinpointSMSVoiceClient createPinpointSMSVoice(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPinpointSMSVoice(array $args = [])
 * @method static \Aws\PinpointSMSVoiceV2\PinpointSMSVoiceV2Client createPinpointSMSVoiceV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPinpointSMSVoiceV2(array $args = [])
 * @method static \Aws\Pipes\PipesClient createPipes(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPipes(array $args = [])
 * @method static \Aws\Polly\PollyClient createPolly(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPolly(array $args = [])
 * @method static \Aws\Pricing\PricingClient createPricing(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPricing(array $args = [])
 * @method static \Aws\PrivateNetworks\PrivateNetworksClient createPrivateNetworks(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPrivateNetworks(array $args = [])
 * @method static \Aws\PrometheusService\PrometheusServiceClient createPrometheusService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionPrometheusService(array $args = [])
 * @method static \Aws\Proton\ProtonClient createProton(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionProton(array $args = [])
 * @method static \Aws\QBusiness\QBusinessClient createQBusiness(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionQBusiness(array $args = [])
 * @method static \Aws\QConnect\QConnectClient createQConnect(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionQConnect(array $args = [])
 * @method static \Aws\QLDB\QLDBClient createQLDB(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionQLDB(array $args = [])
 * @method static \Aws\QLDBSession\QLDBSessionClient createQLDBSession(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionQLDBSession(array $args = [])
 * @method static \Aws\QuickSight\QuickSightClient createQuickSight(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionQuickSight(array $args = [])
 * @method static \Aws\RAM\RAMClient createRAM(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRAM(array $args = [])
 * @method static \Aws\RDSDataService\RDSDataServiceClient createRDSDataService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRDSDataService(array $args = [])
 * @method static \Aws\Rds\RdsClient createRds(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRds(array $args = [])
 * @method static \Aws\RecycleBin\RecycleBinClient createRecycleBin(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRecycleBin(array $args = [])
 * @method static \Aws\Redshift\RedshiftClient createRedshift(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRedshift(array $args = [])
 * @method static \Aws\RedshiftDataAPIService\RedshiftDataAPIServiceClient createRedshiftDataAPIService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRedshiftDataAPIService(array $args = [])
 * @method static \Aws\RedshiftServerless\RedshiftServerlessClient createRedshiftServerless(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRedshiftServerless(array $args = [])
 * @method static \Aws\Rekognition\RekognitionClient createRekognition(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRekognition(array $args = [])
 * @method static \Aws\Repostspace\RepostspaceClient createRepostspace(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRepostspace(array $args = [])
 * @method static \Aws\ResilienceHub\ResilienceHubClient createResilienceHub(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionResilienceHub(array $args = [])
 * @method static \Aws\ResourceExplorer2\ResourceExplorer2Client createResourceExplorer2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionResourceExplorer2(array $args = [])
 * @method static \Aws\ResourceGroups\ResourceGroupsClient createResourceGroups(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionResourceGroups(array $args = [])
 * @method static \Aws\ResourceGroupsTaggingAPI\ResourceGroupsTaggingAPIClient createResourceGroupsTaggingAPI(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionResourceGroupsTaggingAPI(array $args = [])
 * @method static \Aws\RoboMaker\RoboMakerClient createRoboMaker(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoboMaker(array $args = [])
 * @method static \Aws\RolesAnywhere\RolesAnywhereClient createRolesAnywhere(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRolesAnywhere(array $args = [])
 * @method static \Aws\Route53\Route53Client createRoute53(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoute53(array $args = [])
 * @method static \Aws\Route53Domains\Route53DomainsClient createRoute53Domains(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoute53Domains(array $args = [])
 * @method static \Aws\Route53RecoveryCluster\Route53RecoveryClusterClient createRoute53RecoveryCluster(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoute53RecoveryCluster(array $args = [])
 * @method static \Aws\Route53RecoveryControlConfig\Route53RecoveryControlConfigClient createRoute53RecoveryControlConfig(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoute53RecoveryControlConfig(array $args = [])
 * @method static \Aws\Route53RecoveryReadiness\Route53RecoveryReadinessClient createRoute53RecoveryReadiness(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoute53RecoveryReadiness(array $args = [])
 * @method static \Aws\Route53Resolver\Route53ResolverClient createRoute53Resolver(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionRoute53Resolver(array $args = [])
 * @method static \Aws\S3\S3Client createS3(array $args = [])
 * @method static \Aws\S3\S3MultiRegionClient createMultiRegionS3(array $args = [])
 * @method static \Aws\S3Control\S3ControlClient createS3Control(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionS3Control(array $args = [])
 * @method static \Aws\S3Outposts\S3OutpostsClient createS3Outposts(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionS3Outposts(array $args = [])
 * @method static \Aws\SSMContacts\SSMContactsClient createSSMContacts(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSSMContacts(array $args = [])
 * @method static \Aws\SSMIncidents\SSMIncidentsClient createSSMIncidents(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSSMIncidents(array $args = [])
 * @method static \Aws\SSO\SSOClient createSSO(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSSO(array $args = [])
 * @method static \Aws\SSOAdmin\SSOAdminClient createSSOAdmin(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSSOAdmin(array $args = [])
 * @method static \Aws\SSOOIDC\SSOOIDCClient createSSOOIDC(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSSOOIDC(array $args = [])
 * @method static \Aws\SageMaker\SageMakerClient createSageMaker(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSageMaker(array $args = [])
 * @method static \Aws\SageMakerFeatureStoreRuntime\SageMakerFeatureStoreRuntimeClient createSageMakerFeatureStoreRuntime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSageMakerFeatureStoreRuntime(array $args = [])
 * @method static \Aws\SageMakerGeospatial\SageMakerGeospatialClient createSageMakerGeospatial(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSageMakerGeospatial(array $args = [])
 * @method static \Aws\SageMakerMetrics\SageMakerMetricsClient createSageMakerMetrics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSageMakerMetrics(array $args = [])
 * @method static \Aws\SageMakerRuntime\SageMakerRuntimeClient createSageMakerRuntime(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSageMakerRuntime(array $args = [])
 * @method static \Aws\SagemakerEdgeManager\SagemakerEdgeManagerClient createSagemakerEdgeManager(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSagemakerEdgeManager(array $args = [])
 * @method static \Aws\SavingsPlans\SavingsPlansClient createSavingsPlans(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSavingsPlans(array $args = [])
 * @method static \Aws\Scheduler\SchedulerClient createScheduler(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionScheduler(array $args = [])
 * @method static \Aws\Schemas\SchemasClient createSchemas(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSchemas(array $args = [])
 * @method static \Aws\SecretsManager\SecretsManagerClient createSecretsManager(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSecretsManager(array $args = [])
 * @method static \Aws\SecurityHub\SecurityHubClient createSecurityHub(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSecurityHub(array $args = [])
 * @method static \Aws\SecurityLake\SecurityLakeClient createSecurityLake(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSecurityLake(array $args = [])
 * @method static \Aws\ServerlessApplicationRepository\ServerlessApplicationRepositoryClient createServerlessApplicationRepository(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionServerlessApplicationRepository(array $args = [])
 * @method static \Aws\ServiceCatalog\ServiceCatalogClient createServiceCatalog(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionServiceCatalog(array $args = [])
 * @method static \Aws\ServiceDiscovery\ServiceDiscoveryClient createServiceDiscovery(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionServiceDiscovery(array $args = [])
 * @method static \Aws\ServiceQuotas\ServiceQuotasClient createServiceQuotas(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionServiceQuotas(array $args = [])
 * @method static \Aws\Ses\SesClient createSes(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSes(array $args = [])
 * @method static \Aws\SesV2\SesV2Client createSesV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSesV2(array $args = [])
 * @method static \Aws\Sfn\SfnClient createSfn(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSfn(array $args = [])
 * @method static \Aws\Shield\ShieldClient createShield(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionShield(array $args = [])
 * @method static \Aws\SimSpaceWeaver\SimSpaceWeaverClient createSimSpaceWeaver(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSimSpaceWeaver(array $args = [])
 * @method static \Aws\Sms\SmsClient createSms(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSms(array $args = [])
 * @method static \Aws\SnowBall\SnowBallClient createSnowBall(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSnowBall(array $args = [])
 * @method static \Aws\SnowDeviceManagement\SnowDeviceManagementClient createSnowDeviceManagement(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSnowDeviceManagement(array $args = [])
 * @method static \Aws\Sns\SnsClient createSns(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSns(array $args = [])
 * @method static \Aws\Sqs\SqsClient createSqs(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSqs(array $args = [])
 * @method static \Aws\Ssm\SsmClient createSsm(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSsm(array $args = [])
 * @method static \Aws\SsmSap\SsmSapClient createSsmSap(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSsmSap(array $args = [])
 * @method static \Aws\StorageGateway\StorageGatewayClient createStorageGateway(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionStorageGateway(array $args = [])
 * @method static \Aws\Sts\StsClient createSts(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSts(array $args = [])
 * @method static \Aws\SupplyChain\SupplyChainClient createSupplyChain(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSupplyChain(array $args = [])
 * @method static \Aws\Support\SupportClient createSupport(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSupport(array $args = [])
 * @method static \Aws\SupportApp\SupportAppClient createSupportApp(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSupportApp(array $args = [])
 * @method static \Aws\Swf\SwfClient createSwf(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSwf(array $args = [])
 * @method static \Aws\Synthetics\SyntheticsClient createSynthetics(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionSynthetics(array $args = [])
 * @method static \Aws\Textract\TextractClient createTextract(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTextract(array $args = [])
 * @method static \Aws\TimestreamInfluxDB\TimestreamInfluxDBClient createTimestreamInfluxDB(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTimestreamInfluxDB(array $args = [])
 * @method static \Aws\TimestreamQuery\TimestreamQueryClient createTimestreamQuery(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTimestreamQuery(array $args = [])
 * @method static \Aws\TimestreamWrite\TimestreamWriteClient createTimestreamWrite(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTimestreamWrite(array $args = [])
 * @method static \Aws\Tnb\TnbClient createTnb(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTnb(array $args = [])
 * @method static \Aws\TranscribeService\TranscribeServiceClient createTranscribeService(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTranscribeService(array $args = [])
 * @method static \Aws\Transfer\TransferClient createTransfer(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTransfer(array $args = [])
 * @method static \Aws\Translate\TranslateClient createTranslate(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTranslate(array $args = [])
 * @method static \Aws\TrustedAdvisor\TrustedAdvisorClient createTrustedAdvisor(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionTrustedAdvisor(array $args = [])
 * @method static \Aws\VPCLattice\VPCLatticeClient createVPCLattice(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionVPCLattice(array $args = [])
 * @method static \Aws\VerifiedPermissions\VerifiedPermissionsClient createVerifiedPermissions(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionVerifiedPermissions(array $args = [])
 * @method static \Aws\VoiceID\VoiceIDClient createVoiceID(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionVoiceID(array $args = [])
 * @method static \Aws\WAFV2\WAFV2Client createWAFV2(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWAFV2(array $args = [])
 * @method static \Aws\Waf\WafClient createWaf(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWaf(array $args = [])
 * @method static \Aws\WafRegional\WafRegionalClient createWafRegional(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWafRegional(array $args = [])
 * @method static \Aws\WellArchitected\WellArchitectedClient createWellArchitected(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWellArchitected(array $args = [])
 * @method static \Aws\WorkDocs\WorkDocsClient createWorkDocs(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkDocs(array $args = [])
 * @method static \Aws\WorkLink\WorkLinkClient createWorkLink(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkLink(array $args = [])
 * @method static \Aws\WorkMail\WorkMailClient createWorkMail(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkMail(array $args = [])
 * @method static \Aws\WorkMailMessageFlow\WorkMailMessageFlowClient createWorkMailMessageFlow(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkMailMessageFlow(array $args = [])
 * @method static \Aws\WorkSpaces\WorkSpacesClient createWorkSpaces(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkSpaces(array $args = [])
 * @method static \Aws\WorkSpacesThinClient\WorkSpacesThinClientClient createWorkSpacesThinClient(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkSpacesThinClient(array $args = [])
 * @method static \Aws\WorkSpacesWeb\WorkSpacesWebClient createWorkSpacesWeb(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionWorkSpacesWeb(array $args = [])
 * @method static \Aws\XRay\XRayClient createXRay(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionXRay(array $args = [])
 * @method static \Aws\drs\drsClient createdrs(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegiondrs(array $args = [])
 * @method static \Aws\finspace\finspaceClient createfinspace(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionfinspace(array $args = [])
 * @method static \Aws\imagebuilder\imagebuilderClient createimagebuilder(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionimagebuilder(array $args = [])
 * @method static \Aws\ivschat\ivschatClient createivschat(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionivschat(array $args = [])
 * @method static \Aws\kendra\kendraClient createkendra(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionkendra(array $args = [])
 * @method static \Aws\mgn\mgnClient createmgn(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionmgn(array $args = [])
 * @method static \Aws\signer\signerClient createsigner(array $args = [])
 * @method static \Aws\MultiRegionClient createMultiRegionsigner(array $args = [])
 * @see \Aws\Sdk
 */
class Aws extends Facade
{
    protected static function getFacadeAccessor(): string
    {
        return 'aws';
    }
}